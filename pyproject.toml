[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pc-build-ai"
version = "0.1.0"
description = "Advanced multi-agent application designed to automate and optimize the process of custom PC building"
authors = ["Erik Warapaeff <erik@example.com>"]
readme = "README.md"
repository = "https://github.com/ErikWarapaeff/pc_build_ml_ops"

[tool.poetry.dependencies]
python = "^3.12"
langgraph = "*"
langchain-core = "*"
langchain = "*"
langchain-community = "*"
langchain-openai = "*"
pydantic = "*"
fuzzywuzzy = "*"
beautifulsoup4 = "*"
selenium = "*"
playwright = "*"
sqlalchemy = "*"
python-dotenv = "*"
typing-extensions = "*"
pyprojroot = "*"
gradio = "*"

[tool.poetry.group.dev.dependencies]
black = "23.12.1"
isort = "5.13.2"
ruff = "0.1.8"
mypy = "1.7.1"
pre-commit = "3.5.0"
pytest = "7.4.3"
pytest-cov = "4.1.0"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | build
  | dist
  | memory
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]
exclude = [
    ".git",
    ".venv",
    "venv",
    "build",
    "dist",
    "memory",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
exclude = [
    "memory/",
    "tests/"
]

[[tool.mypy.overrides]]
module = [
    "langgraph.*",
    "langchain.*",
    "pyprojroot.*",
]
ignore_missing_imports = true 